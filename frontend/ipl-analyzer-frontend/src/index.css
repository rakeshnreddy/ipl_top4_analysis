/* IPL Analyzer Frontend Global Styles */  
/* Add to your global CSS file, e.g., index.css or App.css */
/* Glassmorphic Theme Styles */
:root {
  /* Light Mode Base */
  /* --bg-color-light: #FFF5E1; /* Replaced by gradient */
  --bg-gradient-start-light: #FFFAF0; /* Floral White - very light warm */
  --bg-gradient-middle-light: #FFF0E1; /* Old Lace - light warm peach */
  --bg-gradient-end-light: #FFE4B5;   /* Moccasin - warm beige */
  --text-color-light: #4E342E; /* Deep Brown - warm dark text */
  --panel-bg-light: rgba(255, 245, 225, 0.6); /* Semi-transparent light panel */
  --panel-border-light: rgba(211, 188, 141, 0.5); /* Subtle warm border */
  --accent-color-light: #FF8A65; /* Muted Orange */
  --accent-color-light-rgb: 255, 138, 101; /* For rgba() usage */
  --error-color-light: #D32F2F; /* Softer Red */
  --error-color-light-rgb: 211, 47, 47; /* For rgba() usage */
  --button-bg-light: #FFB74D; /* Warm Orange */
  --button-text-light: #4E342E;
  --input-bg-light: rgba(255, 245, 225, 0.8);
  --input-border-light: #D3BC8D;
  --table-header-bg-light: rgba(255, 236, 210, 0.7); /* Light warm beige for table headers */

  /* Dark Mode Base */
  /* --bg-color-dark: #2C1B18; /* Replaced by gradient */
  --bg-gradient-start-dark: #3A2B27; /* Darker warm brown */
  --bg-gradient-middle-dark: #2C1B18; /* Very Dark Warm Brown */
  --bg-gradient-end-dark: #1E100C;   /* Deepest warm brown */
  --text-color-dark: #EAE0D6; /* Pale Warm Beige */
  --panel-bg-dark: rgba(44, 27, 24, 0.6); /* Semi-transparent dark panel */
  --panel-border-dark: rgba(100, 80, 70, 0.5); /* Subtle warm dark border */
  --accent-color-dark: #FFB74D; /* Warm Orange (can be same or adjusted) */
  --accent-color-dark-rgb: 255, 183, 77; /* For rgba() usage */
  --error-color-dark: #E57373; /* Lighter, softer red for dark mode */
  --error-color-dark-rgb: 229, 115, 115; /* For rgba() usage */
  --button-bg-dark: #E65100; /* Deeper Orange */
  --button-text-dark: #FFF5E1;
  --input-bg-dark: rgba(62, 39, 35, 0.7);
  --input-border-dark: #795548;
  --table-header-bg-dark: rgba(62, 39, 35, 0.8); /* Dark warm brown for table headers */

  --border-radius-main: 12px;
  --border-radius-small: 8px;
  /* Define primary font variables for consistency */
  --font-family-sans-serif: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  --font-family-monospace: SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
}

/* Basic Reset and Global Settings */
*, *::before, *::after {
  box-sizing: border-box;
}

html {
  scroll-behavior: smooth; /* Smooth scrolling for anchor links */
}


body {
  background: linear-gradient(135deg, var(--bg-gradient-start-light), var(--bg-gradient-middle-light), var(--bg-gradient-end-light));
  color: var(--text-color-light);
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; /* Example font */
  transition: background-color 0.3s ease, color 0.3s ease;
  margin: 0;
  padding: 20px; /* Add some padding around the body */
  line-height: 1.6; /* Improved readability */
  -webkit-font-smoothing: antialiased; /* Smoother fonts on WebKit */
  -moz-osx-font-smoothing: grayscale; /* Smoother fonts on Firefox */
}

#root { /* Assuming your React app mounts to an element with id="root" */
  min-height: 100vh; /* Ensure the app takes at least the full viewport height */
}


/* Dark mode styles */
@media (prefers-color-scheme: dark) {
  body {
    /* background-color: var(--bg-color-dark); */
    background: linear-gradient(135deg, var(--bg-gradient-start-dark), var(--bg-gradient-middle-dark), var(--bg-gradient-end-dark));
    color: var(--text-color-dark);
  }
  .glassy-panel, .control-group, .metadata, .table-responsive, .simulation-results-container, .analysis-results, .qualification-path-results {
    background: var(--panel-bg-dark); /* Important might be needed if old styles have high specificity */
    border: 1px solid var(--panel-border-dark);
    box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.2); /* Softer shadow for dark */
  }
  .button, button {
    background-color: var(--button-bg-dark);
    color: var(--button-text-dark);
    border: 1px solid var(--accent-color-dark);
  }
  .button:hover, button:hover {
    background-color: var(--accent-color-dark); /* Important might be needed */
  }
  input, select, textarea {
    background-color: var(--input-bg-dark);
    color: var(--text-color-dark);
    border: 1px solid var(--input-border-dark);
  }
  input::placeholder, textarea::placeholder {
    color: var(--text-color-dark-placeholder, #b0bec5);
  }
  table th {
    background-color: var(--table-header-bg-dark);
  }
  table td, table th {
    border-bottom: 1px solid var(--panel-border-dark);
  }
  .simulation-message {
    background-color: rgba(var(--accent-color-dark-rgb), 0.15);
    border-left-color: var(--accent-color-dark);
  }
  p[role="alert"] {
    color: var(--error-color-dark) !important; /* Important to override inline style if needed */
    background-color: rgba(var(--error-color-dark-rgb), 0.1);
    border-left-color: var(--error-color-dark);
  }
}

/* Glassmorphic Panel Style */
/* This is the base style for glassy panels.
   Apply this class to components in your TSX files as needed.
*/
.glassy-panel {
  background: var(--panel-bg-light);
  backdrop-filter: blur(8px);
  -webkit-backdrop-filter: blur(8px);
  border-radius: var(--border-radius-main);
  border: 1px solid var(--panel-border-light);
  padding: 20px;
  margin-bottom: 20px;
  box-shadow: 0 8px 32px 0 rgba(0, 0, 0, 0.15), 0 1px 2px rgba(255,255,255,0.75) inset, 0 -1px 1px rgba(0,0,0,0.1) inset; /* Enhanced shadow for 3D */
  transition: background-color 0.3s ease, border-color 0.3s ease;
}

/* Apply glassy-panel styles to specific layout containers if they aren't already getting the class directly */
/* Example: if .control-group itself should always be glassy without adding the class in TSX */
.control-group, .metadata, .table-responsive,
.simulation-results-container, .analysis-results, .qualification-path-results,
.simulation-controls, .analysis-controls, .qualification-path-controls,
.chart-wrapper { /* For containers around charts */
  /* If these elements should always be glassy panels, you can apply the properties here,
     or ensure the .glassy-panel class is added to them in the TSX files. */
}

/* General Rounded Edges & Styling */
button, input, select, textarea {
  border-radius: var(--border-radius-small);
  padding: 10px 15px;
  border: 1px solid var(--input-border-light);
  background-color: var(--input-bg-light);
  color: var(--text-color-light);
  font-size: 1rem;
  transition: background-color 0.3s ease, border-color 0.3s ease;
}
button:hover, .button:hover {
  opacity: 0.9;
  background-color: var(--accent-color-light); /* Important might be needed */
}
button:disabled, .button:disabled {
  opacity: 0.6;
  cursor: not-allowed;
}
.button.success, button.success { /* Assuming .button is a general class you use */
  background-color: var(--button-bg-light);
  color: var(--button-text-light);
  border: 1px solid var(--accent-color-light);
}

select {
  appearance: none; /* Remove default arrow */
  -webkit-appearance: none;
  -moz-appearance: none;
  padding-right: 40px; /* Make space for custom arrow */
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='%234E342E'%3E%3Cpath d='M8 11.207l-4.604-4.603.707-.707L8 9.793l3.896-3.896.707.707z'/%3E%3C/svg%3E"); /* Basic SVG arrow, color matches --text-color-light */
  background-repeat: no-repeat;
  background-position: right 10px center;
  background-size: 16px;
  box-shadow: 0 2px 5px rgba(0,0,0,0.05) inset, 0 1px 1px rgba(255,255,255,0.3); /* Subtle 3D for select */
}

@media (prefers-color-scheme: dark) {
  select {
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='%23EAE0D6'%3E%3Cpath d='M8 11.207l-4.604-4.603.707-.707L8 9.793l3.896-3.896.707.707z'/%3E%3C/svg%3E"); /* Arrow color matches --text-color-dark */
    box-shadow: 0 2px 5px rgba(0,0,0,0.2) inset, 0 1px 1px rgba(255,255,255,0.1);
  }
}

select:focus {
  outline: 2px solid var(--accent-color-light);
  outline-offset: 2px;
  box-shadow: 0 0 0 3px rgba(var(--accent-color-light-rgb), 0.3), /* Existing focus style */
              0 2px 5px rgba(0,0,0,0.05) inset, 0 1px 1px rgba(255,255,255,0.3); /* Keep 3D effect on focus */
}

textarea {
  width: 100%;
  box-sizing: border-box;
}

/* Tables */
.table-responsive {
  overflow-x: auto;
  /* padding: 0; Panel padding is enough */ /* Keep padding for shadow visibility */
  box-shadow: 0 10px 25px rgba(0,0,0,0.1), 0 3px 8px rgba(0,0,0,0.07); /* More pronounced shadow for table container */
}
table {
  width: 100%;
  border-collapse: separate;
  border-spacing: 0;
  border-spacing: 0; /* Crucial for border-radius to work well with overflow:hidden */
  overflow: hidden; /* Clip cell backgrounds to table radius */
}
th, td {
  padding: 12px 15px;
  text-align: left;
  border-bottom: 1px solid var(--panel-border-light);
}
th {
  background-color: var(--table-header-bg-light);
  backdrop-filter: blur(4px); /* Subtle glass for header */
  font-weight: 600;
  box-shadow: 0 2px 3px rgba(0,0,0,0.05) inset; /* Slight inset for 3D header */
}
tbody tr:last-child td {
  border-bottom: none;
}
/* Style for team colors in tables will still come from inline styles via teamStyles.ts */
/* but we can ensure text color has good contrast if teamStyle.text is not defined */
tbody tr td {
  /* color: var(--text-color-light); Fallback if teamStyle.text is missing */
}
@media (prefers-color-scheme: dark) {
  tbody tr td {
    /* color: var(--text-color-dark); Fallback if teamStyle.text is missing */
  }
}


/* Specific Component Adjustments */
/* These containers will get .glassy-panel class from TSX for the background/border */
.simulation-controls, .analysis-controls, .qualification-path-controls { 
  display: flex;
  flex-wrap: wrap;
  gap: 20px;
  align-items: center;
}
.control-group {
  padding: 15px; /* Slightly less padding for inner groups */
  margin-bottom: 0; /* Remove margin if already handled by flex gap or parent panel's padding */
  flex: 1;
  min-width: 250px; /* Ensure controls don't get too squished */
}
.control-group legend {
  font-weight: 600;
  margin-bottom: 8px;
  color: inherit; /* Inherit text color from body/parent */
}
.control-group label {
  margin-right: 10px;
  display: inline-flex; /* Align radio/checkbox with text */
  align-items: center;
  gap: 5px;
}

.simulation-message {
  padding: 15px;
  margin-top: 20px;
  border-left: 5px solid var(--accent-color-light);
  background-color: rgba(var(--accent-color-light-rgb), 0.1); /* Light accent background */
  border-radius: var(--border-radius-small);
}

p[role="alert"] { /* Error messages */
  padding: 15px;
  margin-top: 20px;
  border-left: 5px solid var(--error-color-light);
  background-color: rgba(var(--error-color-light-rgb), 0.1);
  border-radius: var(--border-radius-small);
  color: var(--error-color-light) !important; /* Override inline red */
}

.metadata p {
  margin: 5px 0;
  font-size: 0.9em;
  opacity: 0.8;
}

.mt-1 { margin-top: 0.5rem; }
.mt-2 { margin-top: 1rem; }
.mb-1 { margin-bottom: 0.5rem; }
.mb-2 { margin-bottom: 1rem; }

/* Chart container styling */
.chart-container { /* This is the div you wrap <Bar> with in ProbabilityChart.tsx */
  /* If the chart container itself should be a glassy panel, add .glassy-panel to it in TSX.
     Alternatively, style it directly here if it always has this look.
  background: var(--panel-bg-light);
  backdrop-filter: blur(8px);
  -webkit-backdrop-filter: blur(8px);
  border-radius: var(--border-radius-main);
  border: 1px solid var(--panel-border-light);
  padding: 15px; // Adjust padding as needed
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1); */
}
.chart-container > div { /* Targets the canvas wrapper div from react-chartjs-2 */
   border-radius: var(--border-radius-main);
   padding: 10px; /* Add some padding inside the chart's own container if needed */
 }